# Pipeline de déploiement pour Azure avec vérification du téléchargement d'Azure CLI
trigger:
  branches:
    include:
      - master  # Déclenche le pipeline sur les modifications de la branche principale

pool:
  name: 'Default'  # Utilise le pool d'agents auto-hébergé

steps:
- checkout: self  # Cloner le dépôt

# Télécharger et Configurer Azure CLI avec vérification du fichier ZIP
- task: PowerShell@2
  displayName: 'Télécharger et configurer Azure CLI'
  inputs:
    targetType: 'inline'
    script: |
      # Vérifier si Azure CLI est déjà disponible
      if (-not (Get-Command az -ErrorAction SilentlyContinue)) {
          Write-Output "Azure CLI non trouvé. Téléchargement et configuration..."

          # Supprime le fichier ZIP s'il existe déjà
          if (Test-Path -Path AzureCLI.zip) {
              Remove-Item -Force AzureCLI.zip
          }

          # Télécharge le fichier ZIP d'Azure CLI pour Windows
          Invoke-WebRequest -Uri https://aka.ms/InstallAzureCliWindowsZip -OutFile AzureCLI.zip

          # Vérification de la validité du fichier ZIP
          if (!(Test-Path -Path AzureCLI.zip) -or ((Get-Item AzureCLI.zip).length -eq 0)) {
              Write-Output "Échec du téléchargement d'Azure CLI. Arrêt du pipeline."
              exit 1
          }

          # Créer un dossier pour l'extraction et essayer d'extraire le fichier ZIP
          try {
              Expand-Archive -Path AzureCLI.zip -DestinationPath "$env:USERPROFILE\AzureCLI" -Force
              Write-Output "Azure CLI téléchargé et extrait avec succès."
          } catch {
              Write-Output "Erreur lors de l'extraction d'Azure CLI. Arrêt du pipeline."
              exit 1
          }

          # Ajouter Azure CLI au PATH pour la session en cours
          $env:PATH += ";$env:USERPROFILE\AzureCLI"

          # Vérifier si l'installation fonctionne
          az --version
          
          # Supprimer le fichier ZIP
          Remove-Item -Force AzureCLI.zip
      } else {
          Write-Output "Azure CLI est déjà installé."
      }

# Connexion à Azure
- task: AzureCLI@2
  inputs:
    azureSubscription: 'pipeline-service-connection'  # Nom de la connexion de service configurée
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Cette commande montre l'abonnement Azure actuel pour confirmer la connexion
      az account show

# Déployer les ressources avec un modèle ARM
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    azureSubscription: 'pipeline-service-connection'
    resourceGroupName: 'TP1'  # Nom de votre groupe de ressources
    location: 'East US'  # Région de déploiement
    csmFile: '$(System.DefaultWorkingDirectory)/projet-cloud/vms/azuredeploy.json'  # Chemin vers le fichier ARM Template
    deploymentMode: 'Incremental'  # Utiliser 'Incremental' pour éviter de recréer les ressources existantes
