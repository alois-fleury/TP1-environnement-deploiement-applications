# Pipeline de déploiement pour Azure avec installation de l’Azure CLI via MSI et configuration du PATH
trigger:
  branches:
    include:
      - master  # Déclenche le pipeline sur les modifications de la branche principale

pool:
  name: 'Default'  # Utilise le pool d'agents auto-hébergé

steps:
- checkout: self  # Cloner le dépôt

# Étape 1 : Télécharger et installer Azure CLI via MSI
- task: PowerShell@2
  displayName: 'Télécharger et installer Azure CLI via MSI'
  inputs:
    targetType: 'inline'
    script: |
      # Vérifier si Azure CLI est déjà installé
      if (-not (Get-Command az -ErrorAction SilentlyContinue)) {
          Write-Output "Azure CLI non trouvé. Téléchargement et installation via MSI..."

          # Supprime le fichier MSI s'il existe déjà
          if (Test-Path -Path AzureCLI.msi) {
              Remove-Item -Force AzureCLI.msi
          }

          # Télécharge le fichier MSI d'installation d'Azure CLI
          Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile AzureCLI.msi

          # Vérification de la validité du fichier MSI
          if (!(Test-Path -Path AzureCLI.msi) -or ((Get-Item AzureCLI.msi).length -eq 0)) {
              Write-Output "Échec du téléchargement de l'Azure CLI. Arrêt du pipeline."
              exit 1
          }

          # Installation silencieuse du MSI
          Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet /norestart'
          Write-Output "Azure CLI installé avec succès."

          # Supprimer le fichier MSI après installation
          Remove-Item -Force AzureCLI.msi

          # Ajouter Azure CLI au PATH pour cette session de pipeline
          $env:PATH += ";C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin"
      } else {
          Write-Output "Azure CLI est déjà installé."
      }

# Étape 2 : Vérifier Azure CLI avec chemin complet
- task: PowerShell@2
  displayName: 'Vérifier Azure CLI avec chemin complet'
  inputs:
    targetType: 'inline'
    script: |
      "Vérification de la version Azure CLI"
      & 'C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin\az.cmd' --version

# Étape 3 : Connexion à Azure avec CLI et variables d'environnement
- task: PowerShell@2
  displayName: 'Connexion à Azure via Azure CLI avec chemin complet'
  inputs:
    targetType: 'inline'
    script: |
      & 'C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin\az.cmd' login --service-principal -u "$(AZURE_CLIENT_ID)" -p "$(AZURE_CLIENT_SECRET)" --tenant "$(AZURE_TENANT_ID)"
      & 'C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin\az.cmd' account set --subscription "$(AZURE_SUBSCRIPTION_ID)"

# Étape 4 : Déploiement ARM avec Azure CLI
- task: PowerShell@2
  displayName: 'Déploiement ARM avec Azure CLI et chemin complet'
  inputs:
    targetType: 'inline'
    script: |
      # Remplacez les valeurs des paramètres ci-dessous par les valeurs nécessaires pour le modèle ARM
      & 'C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin\az.cmd' deployment group create --resource-group 'TP1' --template-file '$(System.DefaultWorkingDirectory)/projet-cloud/vms/azuredeploy.json' --parameters location="East US" osDiskType="Standard_LRS" instanceCount=2 loadBalancerName="myLoadBalancer" backendPoolName="myBackendPool" virtualMachineScaleSetName="myVMSS" vmName="myVM" adminUsername="$(adminUsername)" adminPassword="$(adminPassword)"
