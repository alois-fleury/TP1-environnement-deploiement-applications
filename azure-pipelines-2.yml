# Pipeline de déploiement pour Azure avec installation d'Azure CLI et JDK
trigger:
  branches:
    include:
      - master  # Déclenche le pipeline sur les modifications de la branche principale

pool:
  name: 'Default'  # Utilise le pool d'agents auto-hébergé

steps:
- checkout: self  # Cloner le dépôt

# Télécharger et Installer JDK (nécessaire pour Gradle)
- task: JavaToolInstaller@1
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: '"C:\Users\Allow\Downloads\openjdk-17.0.2_windows-x64_bin.zip"'
    jdkDestinationDirectory: '"C:\Users\Allow\Downloads\openjdk-17.0.2_windows-x64_bin"'
    cleanDestinationDirectory: true

# Télécharger et Configurer Azure CLI
- task: PowerShell@2
  displayName: 'Télécharger et configurer Azure CLI'
  inputs:
    targetType: 'inline'
    script: |
      if (-not (Get-Command az -ErrorAction SilentlyContinue)) {
          Write-Output "Azure CLI non trouvé. Téléchargement et configuration..."
          # Télécharge le fichier ZIP d'Azure CLI pour Windows
          Invoke-WebRequest -Uri https://aka.ms/InstallAzureCliWindowsZip -OutFile AzureCLI.zip
          
          # Créer un dossier pour l'extraction et extraire le fichier ZIP
          Expand-Archive -Path AzureCLI.zip -DestinationPath "$env:USERPROFILE\AzureCLI" -Force
          
          # Ajouter Azure CLI au PATH pour la session en cours
          $env:PATH += ";$env:USERPROFILE\AzureCLI"

          # Vérifier si l'installation fonctionne
          az --version
          
          # Supprimer le fichier ZIP
          Remove-Item -Force AzureCLI.zip
      } else {
          Write-Output "Azure CLI est déjà installé."
      }

# Connexion à Azure
- task: AzureCLI@2
  inputs:
    azureSubscription: 'pipeline-service-connection'  # Nom de la connexion de service configurée
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Cette commande montre l'abonnement Azure actuel pour confirmer la connexion
      az account show

# Déployer les ressources avec un modèle ARM
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    azureSubscription: 'pipeline-service-connection'
    resourceGroupName: 'TP1'  # Nom de votre groupe de ressources
    location: 'East US'  # Région de déploiement
    csmFile: '$(System.DefaultWorkingDirectory)/projet-cloud/vms/azuredeploy.json'  # Chemin vers le fichier ARM Template
    deploymentMode: 'Incremental'  # Utiliser 'Incremental' pour éviter de recréer les ressources existantes
